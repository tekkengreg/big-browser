#!/bin/bash

set -e

echo "=== Build script pour BigBrowser Runtime (Tauri) ==="

# V√©rifications pr√©alables
if [ ! -f "apps/runtime/src-tauri/target/release/runtime" ]; then
    echo "‚ùå Erreur: l'ex√©cutable Tauri runtime n'existe pas"
    echo "Construisez d'abord l'application avec: cd apps/runtime && deno task tauri:build"
    exit 1
fi

if [ ! -f "icons/bigbrowser.png" ]; then
    echo "‚ùå Erreur: l'ic√¥ne bigbrowser.png n'existe pas dans icons/"
    exit 1
fi

echo "‚úÖ Ex√©cutable Tauri trouv√©: apps/runtime/src-tauri/target/release/runtime"
echo "‚úÖ Ic√¥ne trouv√©e: icons/bigbrowser.png"

# Cr√©er le dossier de build
BUILD_DIR="build-dir-tauri-runtime"
rm -rf "$BUILD_DIR"
mkdir -p "$BUILD_DIR"

echo "üì¶ Construction du Flatpak Tauri Runtime..."

# Construction avec flatpak-builder
flatpak-builder --user --install --force-clean \
    "$BUILD_DIR" \
    "manifests/com.tekkengreg.bigbrowser.runtime.yml" \
    --verbose

if [ $? -eq 0 ]; then
    echo "‚úÖ Construction r√©ussie!"
    echo ""
    echo "üöÄ Pour tester l'application:"
    echo "   flatpak run com.tekkengreg.bigbrowser.runtime"
    echo "   flatpak run com.tekkengreg.bigbrowser.runtime https://www.example.com"
    echo ""
    echo "üì¶ Pour exporter vers un fichier .flatpak:"
    echo "   flatpak build-export export-repo $BUILD_DIR"
    echo "   flatpak build-bundle export-repo tauri-runtime.flatpak com.tekkengreg.bigbrowser.runtime"
else
    echo "‚ùå Erreur lors de la construction"
    exit 1
fi 